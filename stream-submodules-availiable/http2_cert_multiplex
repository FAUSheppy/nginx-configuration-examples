### THIS MUST BE PLACED WITHIN THE STREAM SECTION  OF THE MAIN CONFIG ###
log_format stream_routing_cert '$remote_addr [$time_local] '
        'with cert status "$ssl_client_verify" '
        'proxying to "$name_cert" '
        '$protocol $status $bytes_sent $bytes_received '
        '$session_time';
log_format protocol_routing_cert '$remote_addr [$time_local] '
        'with prot status "$ssl_preread_alpn_protocols" '
        'proxying to "$protocol_stream" '
        '$protocol $status $bytes_sent $bytes_received '
        '$session_time';

map $ssl_client_verify $name_cert {
    default original_dest_cert;
    "SUCCESS" openvpn_cert;
}

map $ssl_preread_alpn_protocols $protocol_stream {
    default       127.0.0.1:7999;
    ~\bhttp/1.1\b 127.0.0.1:8001;
    ~\bh2\b       127.0.0.1:8001;
}

upstream original_dest_cert {
    server unix:/var/www/tlstunnel/nginx_socket_cert;
}
upstream openvpn_cert {
    server unix:/var/www/tlstunnel/openvpn_socket_cert;
}

# ssl nicht auslesen, nur preread
server{
    listen 93.104.211.59:443;
    listen [2a02:c205:2013:1664::1]:443 ipv6only=on;

    ssl_preread on;
    access_log /var/log/nginx/protocol_routing_cert protocol_routing_cert;
    
    proxy_protocol on;
    proxy_pass $protocol_stream;
}

# ssl auslesen weil sonst sehen wir client cert nicht
server{
    listen 127.0.0.1:7999 ssl proxy_protocol;
    listen 7998 ssl;

    access_log /var/log/nginx/tls_cert.log stream_routing_cert;

    # verify client
    ssl_verify_client       optional;
    proxy_protocol on;
    proxy_pass $name_cert;
}

# openvpn forward
server{
    listen unix:/var/www/tlstunnel/openvpn_socket_cert proxy_protocol;
    proxy_pass 127.0.0.1:7012;
}

# nginx forward
server{
    listen unix:/var/www/tlstunnel/nginx_socket_cert proxy_protocol;
    proxy_pass 127.0.0.1:8004;
}
